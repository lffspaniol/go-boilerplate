// Code generated by MockGen. DO NOT EDIT.
// Source: healthcheck.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDepencencie is a mock of Depencencie interface.
type MockDepencencie struct {
	ctrl     *gomock.Controller
	recorder *MockDepencencieMockRecorder
}

// MockDepencencieMockRecorder is the mock recorder for MockDepencencie.
type MockDepencencieMockRecorder struct {
	mock *MockDepencencie
}

// NewMockDepencencie creates a new mock instance.
func NewMockDepencencie(ctrl *gomock.Controller) *MockDepencencie {
	mock := &MockDepencencie{ctrl: ctrl}
	mock.recorder = &MockDepencencieMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDepencencie) EXPECT() *MockDepencencieMockRecorder {
	return m.recorder
}

// Healthcheck mocks base method.
func (m *MockDepencencie) Healthcheck(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Healthcheck", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Healthcheck indicates an expected call of Healthcheck.
func (mr *MockDepencencieMockRecorder) Healthcheck(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Healthcheck", reflect.TypeOf((*MockDepencencie)(nil).Healthcheck), arg0)
}
